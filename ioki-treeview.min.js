angular.module("RecursionHelper",[]).factory("RecursionHelper",["$compile",function(a){"use strict";return{compile:function(b,c){angular.isFunction(c)&&(c={post:c});var d,e=b.contents().remove();return{pre:c&&c.pre?c.pre:null,post:function(b,f){d||(d=a(e)),d(b,function(a){f.append(a)}),c&&c.post&&c.post.apply(null,arguments)}}}}}]),angular.module("ioki.treeview",["RecursionHelper","pasvaz.bindonce"]).service("TreeviewManager",["$rootScope",function(a){"use strict";var b=this;this.selectedNode={},this.selectedNodeScope={},this.getSelectedNodeScope=function(){return b.selectedNodeScope},this.setSelectedNode=function(c){b.selectedNodeScope=c,b.selectedNode=c.treedata,a.$broadcast("treeview-selected",c.treedata)},this.unselectNode=function(){b.selectedNodeScope={},b.selectedNode={},a.$broadcast("treeview-unselected",{})}}]).provider("$treeview",function(){"use strict";var a=this.defaults={prefixClass:"treeview-",prefixEvent:"treeview",treesettings:{template:"templates/ioki-treeview",iconsBaseClass:"fa",expandable:!0,expandAll:!0,showExpander:!0,removable:!1,addable:!0,selectable:!1,rootSelected:!1,customMethods:{addNode:null,removeNode:null,dragStart:null,dragEnd:null,dragging:null,drop:null}}},b={};this.$get=function(c){function d(d){function e(a){return"undefined"==typeof a.$parent.$parent.treedata}function f(a){return!(e(a)||!b.settings.removable)}function g(a,b){a.treedata.$removable=f(a),b.settings.expandAll&&!a.treedata.expandAllCalled&&(a.treedata.expanded=!0,a.treedata.expandAllCalled=!0),b.settings.rootSelected&&e(a)&&(a.treedata.selected=!0,c.setSelectedNode(a))}function h(a,b){var c,d,e;"string"==typeof a&&"undefined"!=typeof b&&(c=j(k),d=c.treedata,e=d.subnodes,d[a]=b,i(e,a,b))}function i(a,b,c){var d,e;if(angular.isArray(a))for(d=0,e=a.length,d;e>d;d++)a[d][b]=c,i(a[d].subnodes,b,c)}function j(a){return"undefined"==typeof a.$parent.$parent.treedata?a:j(a.$parent.$parent)}var k,l,m={};b=m.$options=angular.extend({},a,d);for(l in a.treesettings)a.treesettings.hasOwnProperty(l)&&"undefined"==typeof d.settings[l]&&(b.settings[l]=a.treesettings[l]);return k=m.$scope=b.scope,k.settings=b.settings,g(k,b),k.$addNode=function(a){m.addNode(a)},k.$removeNode=function(){m.removeNode()},k.$toggleNode=function(){m.toggleNode()},k.$selectNode=function(a){m.selectNode(a)},m.toggleNode=function(){b.settings.expandable&&(k.treedata.expanded=!k.treedata.expanded)},m.selectNode=function(a){var d;b.settings.selectable&&("undefined"!=typeof a.target.attributes["ng-click"]&&"$selectNode($event)"!==a.target.attributes["ng-click"].value?(h("selected",!1),k.treedata.selected=!0):(d=k.treedata.selected,h("selected",!1),k.treedata.selected=!d),k.treedata.selected?c.setSelectedNode(k):c.unselectNode())},m.addNode=function(a){b.settings.addable&&"function"==typeof b.settings.customMethods.addNode&&b.settings.customMethods.addNode(k,a)},m.removeNode=function(){var a,d,e,f=k.treedata;b.settings.removable&&("function"==typeof b.settings.customMethods.removeNode?b.settings.customMethods.removeNode(k):(a=f.getParent(),null!==a&&angular.isArray(a.subnodes)&&(e=a.subnodes.indexOf(f),e>-1&&f.selected&&(d=f.getParentScope(),a.selected=!0,c.setSelectedNode(d),a.subnodes.splice(e,1),d.$apply()))))},m}return d}}).directive("treeview",["RecursionHelper","$treeview","$templateCache","$compile","$document","$window","$q","TreeviewManager",function(a,b,c,d,e,f,g,h){"use strict";var i,j={},k={keypress:!1};return{restrict:"E",transclude:!0,scope:{treedata:"=",treesettings:"=?"},compile:function(l){return"undefined"==typeof i&&(l.attr("treeview-element-type","root"),i={}),a.compile(l,function(a,l){function m(a){var b,c,d=a.keyCode;if(c={select:function(a,b){a.treedata.selected=!1,b.treedata.selected=!0,h.setSelectedNode(b),b.$apply()},left:function(a){a.$apply(function(){a.treedata.expanded=!1})},top:function(a){var b,d,e,f,g=a.treedata,h=g.getParent(),i=g.getParentScope();if(null!==h)if(f=h.subnodes.indexOf(g),f>0){for(d=h.subnodes[f-1],e=d.getScope();d.expanded&&"undefined"!=typeof d.subnodes&&d.subnodes.length>0;)b=d.subnodes[d.subnodes.length-1],e=b.getScope(),d=b;c.select(a,e)}else c.select(a,i)},right:function(a){a.$apply(function(){a.treedata.expanded=!0})},bottom:function(a){var b,d,e,f,g=a.treedata,h=g.getParent();if(g.expanded)"undefined"!=typeof g.subnodes[0]?(d=g.subnodes[0],e=d.getScope(),c.select(a,e)):(f=h.subnodes.indexOf(g),d=h.subnodes[f+1],e=d.getScope(),c.select(a,e));else if(f=h.subnodes.indexOf(g),f>-1)if("undefined"!=typeof h.subnodes[f+1])d=h.subnodes[f+1],e=d.getScope(),c.select(a,e);else{do b=h.getParent(),f=b.subnodes.indexOf(h),h=b,"undefined"!=typeof b.subnodes[f+1]&&(d=b.subnodes[f+1],e=d.getScope());while("undefined"==typeof b.subnodes[f+1]||null===b);c.select(a,e)}}},d>=37&&40>=d||46===d)switch(b=h.getSelectedNodeScope(),d){case 37:c.left(b);break;case 38:c.top(b);break;case 39:c.right(b);break;case 40:c.bottom(b);break;case 46:b.$removeNode()}}function n(a){"i"!==a.target.tagName.toLowerCase()&&"a"!==a.target.tagName.toLowerCase()&&2!==a.button&&3!==a.which&&(a.preventDefault(),a.stopPropagation(),"undefined"==typeof i.el&&(i=r(l)),A=a.pageX-l[0].offsetLeft,B=a.pageY-l[0].offsetTop,e.on("mousemove touchmove",o).on("mouseup touchend",p)),C=!1}function o(b){var c,d=b.pageX+10,e=b.pageY+10;for(C=!0,D&&(x=l.parent(),w=l[0].cloneNode(!0),w.className="ghost",l.after(w),c=l[0].offsetWidth,i.el.addClass("dragging"),l.addClass("dragged").css({left:l[0].offsetLeft+"px",top:l[0].offsetTop+"px",width:c+"px"}),"function"==typeof a.settings.customMethods.dragStart&&a.settings.customMethods.dragStart(i,a,l),D=!1),l.css({top:e+"px",left:d+"px"}),"undefined"!=typeof y&&y.remove(),y=angular.element('<li class="separator">DROP ITEM HERE</li>'),E.el=angular.element(f.document.elementFromPoint(b.clientX,b.clientY)),E.treeview=E.el;"undefined"!=typeof E.treeview[0].tagName&&"treeview"!==E.treeview[0].tagName.toLowerCase();)E.treeview=E.treeview.parent();if(E.list=E.treeview.children().eq(1),q(E.treeview))E.isDroppable=!1;else if(E.isDroppable=!0,E.scope=E.treeview.scope(),E.node=E.scope.treeData||E.scope.subnode,E.node.subnodes&&E.el.hasClass("node-label"))E.dropToDir=!0,E.list_el=E.treeview,E.list=E.treeview.children().children().eq(-1),E.list.after(y),E.addAfterEl=!0,"undefined"!=typeof z&&z.removeClass("dropToDir"),z=E.treeview,z.addClass("dropToDir");else{for(E.dropToDir=!1,"undefined"!=typeof E.node.subnodes&&(E.node=E.scope.$parent.treedata),E.treeview=E.treeview.parent(),E.list_el=E.treeview;"undefined"!=typeof E.treeview[0].tagName&&"treeview"!==E.treeview[0].tagName.toLowerCase();)E.treeview=E.treeview.parent();E.list=E.list_el.after(),b.clientY>E.list[0].getBoundingClientRect().top+E.list[0].offsetHeight/2?(E.list.after(y),E.addAfterEl=!0):(E.list.prepend(y),E.addAfterEl=!1)}E.dropToDir===!1&&"undefined"!=typeof z&&z.removeClass("dropToDir"),"function"==typeof a.settings.customMethods.dragging&&a.settings.customMethods.dragging(i,a,E,l)}function p(){var b,c,d,f,h,j=g.defer(),k=j.promise;C&&(E.isDroppable?(E.scope=E.treeview.scope(),E.node=E.scope.treeData||E.scope.subnode,b=a.treedata,h=a.$parent.$parent.treedata,d=h.subnodes.indexOf(b),E.dropToDir?(c=E.node.subnodes.length,E.node.expanded||(E.node.expanded=!0)):(f=E.el.scope().treedata,c=E.addAfterEl?E.node.subnodes.indexOf(f)+1:E.node.subnodes.indexOf(f)),k.then(function(a){var c=a||0;E.node.subnodes===h.subnodes&&d>c?(h.subnodes.splice(d,1),E.node.subnodes.splice(c,0,b)):(E.node.subnodes.splice(c,0,b),h.subnodes.splice(d,1))}),"function"==typeof a.settings.customMethods.dragEnd?a.settings.customMethods.dragEnd(E.isDroppable,i,a,E,j):j.resolve(c)):"function"==typeof a.settings.customMethods.dragEnd&&a.settings.customMethods.dragEnd(E.isDroppable,i,a,E,j),A=B=0,w.remove(),w=null,"undefined"!=typeof y&&y.remove(),"undefined"!=typeof z&&z.removeClass("dropToDir"),E.isDroppable=!1,i.el.removeClass("dragging"),l.removeClass("dragged").removeAttr("style")),e.off("mousemove",o).off("mouseup",p),D=!0}function q(a){var b=a;if(b.hasClass("ghost")||"root"===b.attr("treeview-element-type"))return!0;for(;"undefined"!=typeof b[0]&&"root"!==b.attr("treeview-element-type");){if("undefined"==typeof b[0].tagName)return!0;if("treeview"===b[0].tagName.toLowerCase()&&b.hasClass("ghost"))return!0;b=b.parent()}return!1}function r(a){if("undefined"!=typeof a)for(;"undefined"!=typeof a&&"root"!==a.attr("treeview-element-type");)if(a=a.parent(),"root"===a.attr("treeview-element-type"))return{el:a,scope:a.scope()}}var s,t,u,v,w,x,y,z,A=0,B=0,C=!1,D=!0,E={el:null,node:null,list:null,list_el:null,treeview:null,scope:null,addAfterEl:!0,dropToDir:!1,isDroppable:!1};"undefined"!=typeof a.treesettings&&angular.copy(a.treesettings,j),a.settings=j,angular.isNumber(j.expandToLevel)&&(a.treedata.level="undefined"==typeof a.$parent.treedata?1:a.$parent.treedata.level+1,a.treedata.expanded=a.treedata.level<j.expandToLevel),a.treedata.getParent=function(){var b=a.$parent.$parent.$parent.treedata;return"undefined"!=typeof b?b:null},a.treedata.getParentScope=function(){var b=a.$parent.$parent.$parent;return"undefined"!=typeof b?b:null},a.treedata.getScope=function(){return a},s=a.settings.template||"templates/ioki-treeview",t=c.get(s),u=d(t)(a),l.append(u),v={scope:a,element:l,settings:a.settings},b(v),"root"!==l.attr("treeview-element-type")?l.on("mousedown touchstart",n):(v.settings.showExpander&&l.addClass("show-expander"),v.settings.removable||l.addClass("unremovable"),v.settings.addable||l.addClass("unaddable")),k.keypress||(e.on("keydown",m),k.keypress=!0)})}}}]),angular.module("ioki.treeview").run(["$templateCache",function(a){"use strict";a.put("templates/ioki-treeview",'<div bindonce\n     ng-class="{\'expanded\': treedata.expanded, \'selected\': treedata.selected, \'dir\': treedata.subnodes}"\n     ng-click="$selectNode($event)">\n\n    <!-- expander icon -->\n    <i class="expander"\n       bo-class="settings.iconsBaseClass"\n       ng-click="$toggleNode()"></i>\n\n    <!-- node icon -->\n    <i class="node-icon"\n       bo-class="settings.iconsBaseClass"></i>\n\n    <!-- node label -->\n    <span class="node-label" ng-bind="treedata.name"></span>\n\n    <!-- remove node icon -->\n    <i class="remove-node"\n       bo-class="settings.iconsBaseClass"\n       ng-click="$removeNode()"></i>\n\n    <!-- add node icon -->\n    <i class="add-node"\n       bo-class="settings.iconsBaseClass"\n       ng-click="$addNode()"></i>\n</div>\n<ul ng-if="treedata.subnodes && treedata.expanded">\n    <li ng-repeat="subnode in treedata.subnodes track by $index">\n        <treeview treedata="subnode"></treeview>\n    </li>\n</ul>')}]),angular.module("ioki.treeview").filter("getNodeIcon",function(){"use strict";return function(a,b){var c;return"string"==typeof a.type&&"undefined"!=typeof b[a.type]?(c=b[a.type],null!==c&&"object"==typeof c?(a.expanded=a.expanded||!1,a.expanded?c.open:c.closed):c):null}});