angular.module("RecursionHelper",[]).factory("RecursionHelper",["$compile",function(a){"use strict";return{compile:function(b,c){angular.isFunction(c)&&(c={post:c});var d,e=b.contents().remove();return{pre:c&&c.pre?c.pre:null,post:function(b,f){d||(d=a(e)),d(b,function(a){f.append(a)}),c&&c.post&&c.post.apply(null,arguments)}}}}}]),angular.module("ioki.treeview",["RecursionHelper","pasvaz.bindonce"]).provider("$treeview",function(){"use strict";var a=this.defaults={prefixClass:"treeview-",prefixEvent:"treeview",treesettings:{template:"templates/ioki-treeview",iconsBaseClass:"fa",interfaceIcons:{addNode:"fa-plus-circle",removeNode:"fa-minus-circle",openDir:"fa-caret-down",closeDir:"fa-caret-right"},expandable:!0,expandAll:!0,showExpander:!0,removable:!1,addable:!0,selectable:!1,customMethods:{addNode:null,removeNode:null,dragStart:null,dragEnd:null,dragging:null,drop:null}}},b={};this.$get=function(){function c(c){function d(a,b){var c,d,h;"string"==typeof a&&"undefined"!=typeof b&&(c=f(g),d=c.treedata,h=d.subnodes,d[a]=b,e(h,a,b))}function e(a,b,c){var d,f;if(angular.isArray(a))for(d=0,f=a.length,d;f>d;d++)a[d][b]=c,e(a[d].subnodes,b,c)}function f(a){return"undefined"==typeof a.$parent.$parent.treedata?a:f(a.$parent.$parent)}var g,h,i={};b=i.$options=angular.extend({},a,c);for(h in a.treesettings)a.treesettings.hasOwnProperty(h)&&"undefined"==typeof c.settings[h]&&(b.settings[h]=a.treesettings[h]);if("undefined"!=typeof c.settings.interfaceIcons)for(h in a.treesettings.interfaceIcons)a.treesettings.interfaceIcons.hasOwnProperty(h)&&"undefined"==typeof c.settings.interfaceIcons[h]&&(b.settings.interfaceIcons[h]=a.treesettings.interfaceIcons[h]);return g=i.$scope=b.scope,g.settings=b.settings,g.treedata.$removable="undefined"!=typeof g.$parent.$parent.treedata&&b.settings.removable?!0:!1,b.settings.expandAll&&!g.treedata.expandAllCalled&&(g.treedata.expanded=!0,g.treedata.expandAllCalled=!0),g.$addNode=function(a){i.addNode(a)},g.$removeNode=function(){i.removeNode()},g.$toggleNode=function(){i.toggleNode()},g.$selectNode=function(){i.selectNode()},i.toggleNode=function(){b.settings.expandable&&(g.treedata.expanded=!g.treedata.expanded)},i.selectNode=function(){var a;b.treesettings.selectable&&(a=g.treedata.selected,d("selected",!1),g.treedata.selected=!a)},i.addNode=function(a){b.settings.addable&&"function"==typeof b.settings.customMethods.addNode&&b.settings.customMethods.addNode(g,a)},i.removeNode=function(){var a,c,d,e=g.treedata;b.settings.removable&&("function"==typeof b.settings.customMethods.removeNode?b.settings.customMethods.removeNode(g):(a=g.$parent.$parent.treedata,"undefined"!=typeof a&&(c=a.subnodes,angular.isArray(c)&&(d=c.indexOf(e),d>-1&&c.splice(d,1)))))},i}return c}}).directive("treeview",["RecursionHelper","$treeview","$templateCache","$compile","$document","$window","$q",function(a,b,c,d,e,f,g){"use strict";var h,i={};return{restrict:"E",transclude:!0,scope:{treedata:"=",treesettings:"=?"},compile:function(j){return"undefined"==typeof h&&(j.attr("treeview-element-type","root"),h={}),a.compile(j,function(a,j){function k(b){var c;"i"!==b.target.tagName.toLowerCase()&&"a"!==b.target.tagName.toLowerCase()&&2!==b.button&&3!==b.which&&(b.preventDefault(),b.stopPropagation(),"undefined"==typeof h.el&&(h=o(j)),u=j.parent(),t=j[0].cloneNode(!0),t.className="ghost",j.after(t),x=b.pageX-j[0].offsetLeft,y=b.pageY-j[0].offsetTop,c=j[0].offsetWidth,h.el.addClass("dragging"),j.addClass("dragged").css({left:j[0].offsetLeft+"px",top:j[0].offsetTop+"px",width:c+"px"}),e.on("mousemove touchmove",l).on("mouseup touchend",m),"function"==typeof a.settings.customMethods.dragStart&&a.settings.customMethods.dragStart(h,a,j))}function l(b){var c=b.pageX+10,d=b.pageY+10;for(j.css({top:d+"px",left:c+"px"}),"undefined"!=typeof v&&v.remove(),v=angular.element('<li class="separator">DROP ITEM HERE</li>'),z.el=angular.element(f.document.elementFromPoint(b.clientX,b.clientY)),z.treeview=z.el;"undefined"!=typeof z.treeview[0].tagName&&"treeview"!==z.treeview[0].tagName.toLowerCase();)z.treeview=z.treeview.parent();if(z.list=z.treeview.children().eq(1),n(z.treeview))z.isDroppable=!1;else if(z.isDroppable=!0,z.scope=z.treeview.scope(),z.node=z.scope.treeData||z.scope.subnode,z.node.subnodes&&z.el.hasClass("node-label"))z.dropToDir=!0,z.list_el=z.treeview,z.list=z.treeview.children().children().eq(-1),z.list.after(v),z.addAfterEl=!0,"undefined"!=typeof w&&w.removeClass("dropToDir"),w=z.treeview,w.addClass("dropToDir");else{for(z.dropToDir=!1,"undefined"!=typeof z.node.subnodes&&(z.node=z.scope.$parent.treedata),z.treeview=z.treeview.parent(),z.list_el=z.treeview;"undefined"!=typeof z.treeview[0].tagName&&"treeview"!==z.treeview[0].tagName.toLowerCase();)z.treeview=z.treeview.parent();z.list=z.list_el.after(),b.clientY>z.list[0].getBoundingClientRect().top+z.list[0].offsetHeight/2?(z.list.after(v),z.addAfterEl=!0):(z.list.prepend(v),z.addAfterEl=!1)}z.dropToDir===!1&&"undefined"!=typeof w&&w.removeClass("dropToDir"),"function"==typeof a.settings.customMethods.dragging&&a.settings.customMethods.dragging(h,a,z,j)}function m(){var b,c,d,f,i,k=g.defer(),n=k.promise;z.isDroppable?(z.scope=z.treeview.scope(),z.node=z.scope.treeData||z.scope.subnode,b=a.treedata,i=a.$parent.$parent.treedata,d=i.subnodes.indexOf(b),z.dropToDir?(c=z.node.subnodes.length,z.node.expanded||(z.node.expanded=!0)):(f=z.el.scope().treedata,c=z.addAfterEl?z.node.subnodes.indexOf(f)+1:z.node.subnodes.indexOf(f)),n.then(function(a){var c=a||0;z.node.subnodes===i.subnodes&&d>c?(i.subnodes.splice(d,1),z.node.subnodes.splice(c,0,b)):(z.node.subnodes.splice(c,0,b),i.subnodes.splice(d,1))}),"function"==typeof a.settings.customMethods.dragEnd?a.settings.customMethods.dragEnd(z.isDroppable,h,a,z,k):k.resolve(c)):"function"==typeof a.settings.customMethods.dragEnd&&a.settings.customMethods.dragEnd(z.isDroppable,h,a,z,k),x=y=0,t.remove(),t=null,"undefined"!=typeof v&&v.remove(),"undefined"!=typeof w&&w.removeClass("dropToDir"),z.isDroppable=!1,h.el.removeClass("dragging"),j.removeClass("dragged").removeAttr("style"),e.off("mousemove",l).off("mouseup",m)}function n(a){var b=a;if(b.hasClass("ghost")||"root"===b.attr("treeview-element-type"))return!0;for(;"undefined"!=typeof b[0]&&"root"!==b.attr("treeview-element-type");){if("undefined"==typeof b[0].tagName)return!0;if("treeview"===b[0].tagName.toLowerCase()&&b.hasClass("ghost"))return!0;b=b.parent()}return!1}function o(a){if("undefined"!=typeof a)for(;"undefined"!=typeof a&&"root"!==a.attr("treeview-element-type");)if(a=a.parent(),"root"===a.attr("treeview-element-type"))return{el:a,scope:a.scope()}}var p,q,r,s,t,u,v,w,x=0,y=0,z={el:null,node:null,list:null,list_el:null,treeview:null,scope:null,addAfterEl:!0,dropToDir:!1,isDroppable:!1};"undefined"!=typeof a.treesettings?(angular.copy(a.treesettings,i),a.settings=i):a.settings=i,angular.isNumber(i.expandToLevel)&&(a.treedata.level="undefined"==typeof a.$parent.treedata?1:a.$parent.treedata.level+1,a.treedata.expanded=a.treedata.level<i.expandToLevel),p=a.settings.template||"templates/ioki-treeview",q=c.get(p),r=d(q)(a),j.append(r),s={scope:a,element:j,settings:a.settings},b(s),"root"!==j.attr("treeview-element-type")?j.on("mousedown touchstart",k):(s.settings.showExpander&&j.addClass("show-expander"),s.settings.removable||j.addClass("unremovable"),s.settings.addable||j.addClass("unaddable"))})}}}]),angular.module("ioki.treeview").run(["$templateCache",function(a){"use strict";a.put("templates/ioki-treeview",'<div bindonce\n     ng-class="{\'expanded\': treedata.expanded, \'selected\': treedata.selected, \'dir\': treedata.subnodes}"\n     ng-click="$selectNode()">\n\n    <!-- expander icon -->\n    <i class="expander"\n       bo-class="settings.iconsBaseClass"\n       ng-click="$toggleNode()"></i>\n\n    <!-- node icon -->\n    <i class="node-icon"\n       bo-class="settings.iconsBaseClass"></i>\n\n    <!-- node label -->\n    <span class="node-label" ng-bind="treedata.name"></span>\n\n    <!-- remove node icon -->\n    <i class="remove-node"\n       bo-class="settings.iconsBaseClass"\n       ng-click="$removeNode()"></i>\n\n    <!-- add node icon -->\n    <i class="add-node"\n       bo-class="settings.iconsBaseClass"\n       ng-click="$addNode()"></i>\n</div>\n<ul ng-if="treedata.subnodes && treedata.expanded">\n    <li ng-repeat="subnode in treedata.subnodes track by $index">\n        <treeview treedata="subnode"></treeview>\n    </li>\n</ul>')}]),angular.module("ioki.treeview").filter("getNodeIcon",function(){"use strict";return function(a,b){var c;return"string"==typeof a.type&&"undefined"!=typeof b[a.type]?(c=b[a.type],null!==c&&"object"==typeof c?(a.expanded=a.expanded||!1,a.expanded?c.open:c.closed):c):null}});