angular.module("RecursionHelper",[]).factory("RecursionHelper",["$compile",function(a){"use strict";return{compile:function(b,c){angular.isFunction(c)&&(c={post:c});var d,e=b.contents().remove();return{pre:c&&c.pre?c.pre:null,post:function(b,f){d||(d=a(e)),d(b,function(a){f.append(a)}),c&&c.post&&c.post.apply(null,arguments)}}}}}]),angular.module("ioki.treeview",["RecursionHelper"]).directive("treeview",["RecursionHelper","$treeview","$templateCache","$compile","$document","$window","$q","TreeviewManager",function(a,b,c,d,e,f,g,h){"use strict";var i={};return{restrict:"E",transclude:!0,scope:{treedata:"=",treesettings:"=?",treeid:"=?",treeAllowCopy:"=?"},compile:function(j){function k(a,b){var c=b;if(a.setParent=function(a){c=a},a.getParent=function(){return c},a.getNext=function(){var c,d;return null!==b?(c=b.subnodes.indexOf(a),d=b.subnodes[c+1],"undefined"!=typeof d?d:null):null},a.getPrev=function(){var c,d;return null!==b?(c=b.subnodes.indexOf(a),d=b.subnodes[c-1],"undefined"!=typeof d?d:null):null},a.level=null===b?1:b.level+1,angular.isArray(a.subnodes))for(var d=0,e=a.subnodes.length;e>d;d++)k(a.subnodes[d],a)}function l(a,b){a.treeid=a.treeid||h.getNextTreeId(),h.addTree(a,b)}function m(a,b){var c=a.treedata;l(a,b),k(c,null)}return a.compile(j,function(a,j){function k(b){var c=a.settings.customMethods.allowDragStart;"i"!==b.target.tagName.toLowerCase()&&"a"!==b.target.tagName.toLowerCase()&&2!==b.button&&3!==b.which&&(b.preventDefault(),b.stopPropagation(),("undefined"==typeof c||angular.isFunction(c)&&c(a))&&("undefined"===h.trees[a.treeid].element&&(h.trees[a.treeid].element=p(j)),y=b.pageX-j[0].offsetLeft,z=b.pageY-j[0].offsetTop,e.on("mousemove touchmove",l).on("mouseup touchend",n))),A=!1}function l(b){var c,d=b.pageX+10,e=b.pageY+10;for(A=!0,B&&(v=j.parent(),u=j[0].cloneNode(!0),u.className="ghost",j.after(u),c=j[0].offsetWidth,h.trees[a.treeid].element.addClass("dragging"),j.addClass("dragged").css({left:j[0].offsetLeft+"px",top:j[0].offsetTop+"px",width:c+"px"}),"undefined"!=typeof a.settings.customMethods&&angular.isFunction(a.settings.customMethods.dragStart)&&a.settings.customMethods.dragStart(h.trees[a.treeid].element,a,j),B=!1),j.css({top:e+"px",left:d+"px"}),"undefined"!=typeof w&&w.remove(),w=angular.element('<li class="separator">DROP ITEM HERE</li>'),C.el=angular.element(f.document.elementFromPoint(b.clientX,b.clientY)),C.treeview=C.el;"undefined"!=typeof C.treeview[0].tagName&&"treeview"!==C.treeview[0].tagName.toLowerCase();)C.treeview=C.treeview.parent();if(C.list=C.treeview.children().eq(1),o(C.treeview))C.isDroppable=!1;else if(C.isDroppable=!0,C.scope=C.treeview.scope(),C.node=C.scope.treeData||C.scope.subnode,C.node.subnodes&&C.el.hasClass("node-label"))C.dropToDir=!0,C.list_el=C.treeview,C.list=C.treeview.children().children().eq(-1),C.list.after(w),C.addAfterEl=!0,"undefined"!=typeof x&&x.removeClass("dropToDir"),x=C.treeview,x.addClass("dropToDir");else{for(C.dropToDir=!1,"undefined"!=typeof C.node.subnodes&&(C.node=C.scope.$parent.treedata),C.treeview=C.treeview.parent(),C.list_el=C.treeview;"undefined"!=typeof C.treeview[0].tagName&&"treeview"!==C.treeview[0].tagName.toLowerCase();)C.treeview=C.treeview.parent();C.list=C.list_el.after(),b.clientY>C.list[0].getBoundingClientRect().top+C.list[0].offsetHeight/2?(C.list.after(w),C.addAfterEl=!0):(C.list.prepend(w),C.addAfterEl=!1)}C.dropToDir===!1&&"undefined"!=typeof x&&x.removeClass("dropToDir"),"undefined"!=typeof a.settings.customMethods&&angular.isFunction(a.settings.customMethods.dragging)&&a.settings.customMethods.dragging(h.trees[a.treeid].element,a,C,j)}function n(){var b,c,d,f,i,k=g.defer(),m={},o=k.promise;A&&(C.isDroppable?(C.scope=C.treeview.scope(),C.node=C.scope.treeData||C.scope.subnode,b=a.treedata,i=a.$parent.$parent.treedata,d=i.subnodes.indexOf(b),C.dropToDir?(c=C.node.subnodes.length,C.node.expanded||(C.node.expanded=!0)):(f=C.el.scope().treedata,c=C.addAfterEl?C.node.subnodes.indexOf(f)+1:C.node.subnodes.indexOf(f)),C.elementIndexToAdd=c,o.then(function(c){var e,f=c.index||0;C.node.subnodes===i.subnodes&&d>f?(i.subnodes.splice(d,1),C.node.subnodes.splice(f,0,b)):b.getScope().treeid!==C.node.getScope().treeid?(b.selected&&(h.selectNode(b.getParent(),b.getScope().treeid),b.selected=!1),e=c.newId||h.makeNewNodeId(),h.trees[a.treeid].scope.treeAllowCopy?(m=angular.copy(b),m.id=e,m.level=++C.node.level,m.getParent=function(){return C.node},C.node.subnodes.splice(f,0,m)):(b.id=e,C.node.subnodes.splice(f,0,b),i.subnodes.splice(d,1),b.setParent(C.node))):(C.node.subnodes.splice(f,0,b),i.subnodes.splice(d,1))}),"undefined"!=typeof a.settings.customMethods&&angular.isFunction(a.settings.customMethods.dragEnd)?a.settings.customMethods.dragEnd(C.isDroppable,h.trees[a.treeid].element,a,C,k):k.resolve({index:c})):"undefined"!=typeof a.settings.customMethods&&angular.isFunction(a.settings.customMethods.dragEnd)&&a.settings.customMethods.dragEnd(C.isDroppable,h.trees[a.treeid].element,a,C,k),y=z=0,u.remove(),u=null,"undefined"!=typeof w&&w.remove(),"undefined"!=typeof x&&x.removeClass("dropToDir"),C.isDroppable=!1,h.trees[a.treeid].element.removeClass("dragging"),j.removeClass("dragged").removeAttr("style")),e.off("mousemove",l).off("mouseup",n),B=!0}function o(a){var b=a;if(b.hasClass("ghost")||"root"===b.attr("treeview-element-type"))return!0;for(;"undefined"!=typeof b[0]&&"root"!==b.attr("treeview-element-type");){if("undefined"==typeof b[0].tagName)return!0;if("treeview"===b[0].tagName.toLowerCase()&&b.hasClass("ghost"))return!0;b=b.parent()}return!1}function p(a){if("undefined"!=typeof a)for(;"undefined"!=typeof a&&"root"!==a.attr("treeview-element-type");)if(a=a.parent(),"root"===a.attr("treeview-element-type"))return{el:a,scope:a.scope()}}var q,r,s,t,u,v,w,x,y=0,z=0,A=!1,B=!0,C={el:null,node:null,list:null,list_el:null,treeview:null,scope:null,addAfterEl:!0,dropToDir:!1,isDroppable:!1};a.getParent=function(){var b=a.$parent.$parent;return"undefined"!=typeof b.treedata?b:null},"undefined"==typeof a.treeid&&(a.treeid=a.getParent().treeid),h.isAddedToManager(a)||(j.attr("treeview-element-type","root"),m(a,j)),"undefined"!=typeof a.treesettings&&angular.copy(a.treesettings,i),a.settings=i,angular.isNumber(i.expandToLevel)&&(a.treedata.expanded=a.treedata.level<i.expandToLevel),"undefined"!=typeof a.settings.customMethods&&angular.isFunction(a.settings.customMethods.init)&&a.settings.customMethods.init(a,j),a.treedata.getScope=function(){return a},q=a.settings.template||"templates/ioki-treeview",r=c.get(q),s=d(r)(a),j.append(s),t={scope:a,element:j,settings:a.settings},b(t),"root"!==j.attr("treeview-element-type")&&a.settings.draggable?j.on("mousedown touchstart",k):(t.settings.showExpander&&j.addClass("show-expander"),t.settings.removable||j.addClass("unremovable"),t.settings.addable||j.addClass("unaddable"))})}}}]),angular.module("ioki.treeview").provider("$treeview",function(){"use strict";var a=this.defaults={prefixEvent:"treeview",treesettings:{template:"templates/ioki-treeview",expandable:!0,expandAll:!0,showExpander:!0,removable:!1,addable:!0,selectable:!1,rootSelected:!1,draggable:!0,disallowKeyboardNavigation:!1,customMethods:{addNode:null,afterNodeSelectCallback:null,removeNode:null,dragStart:null,dragEnd:null,dragging:null,drop:null,init:null,allowDragStart:function(){return!0}}}},b={};this.$get=["$q","TreeviewManager",function(c,d){function e(e){function f(a){return"undefined"==typeof a.$parent.$parent.treedata}function g(a){return!(f(a)||!b.settings.removable)}function h(a,b){a.treedata.$removable=g(a),b.settings.expandAll&&!a.treedata.expandAllCalled&&(a.treedata.expanded=!0,a.treedata.expandAllCalled=!0),b.settings.rootSelected&&f(a)&&(a.treedata.selected=!0,d.setSelectedNode(a.treedata,a.treeid))}function i(a){var b,c=m.treedata,e=m.getParent();null!==e&&angular.isArray(e.treedata.subnodes)&&(b=a||e.treedata.subnodes.indexOf(c),e.treedata.subnodes.splice(b,1),e.treedata.selected=!0,c.selected&&d.setSelectedNode(e,m.treeid))}function j(a,b){var c,d,e;"string"==typeof a&&"undefined"!=typeof b&&(c=l(m),d=c.treedata,e=d.subnodes,d[a]=b,k(e,a,b))}function k(a,b,c){var d,e;if(angular.isArray(a))for(d=0,e=a.length,d;e>d;d++)a[d][b]=c,k(a[d].subnodes,b,c)}function l(a){return f(a)?a:l(a.$parent.$parent)}var m,n,o={};b=o.$options=angular.extend({},a,e);for(n in a.treesettings)a.treesettings.hasOwnProperty(n)&&"undefined"==typeof e.settings[n]&&(b.settings[n]=a.treesettings[n]);return m=o.$scope=b.scope,m.settings=b.settings,h(m,b),m.$addNode=function(a){o.addNode(a)},m.$removeNode=function(){o.removeNode()},m.$toggleNode=function(){o.toggleNode()},m.$selectNode=function(a){o.selectNode(a)},o.toggleNode=function(){b.settings.expandable&&(m.treedata.expanded=!m.treedata.expanded)},o.selectNode=function(a){var c;b.settings.selectable&&("undefined"!=typeof a.target.attributes["ng-click"]&&"$selectNode($event)"!==a.target.attributes["ng-click"].value?(j("selected",!1),m.treedata.selected=!0):(c=m.treedata.selected,j("selected",!1),m.treedata.selected=!c),angular.isFunction(b.settings.customMethods.afterNodeSelectCallback)&&b.settings.customMethods.afterNodeSelectCallback(m.treedata),m.treedata.selected?d.setSelectedNode(m.treedata,m.treeid):d.unselectNode())},o.addNode=function(a){b.settings.addable&&"function"==typeof b.settings.customMethods.addNode&&b.settings.customMethods.addNode(m,a)},o.removeNode=function(){var a=c.defer(),d=a.promise;b.settings.removable&&(angular.isFunction(b.settings.customMethods.removeNode)?b.settings.customMethods.removeNode(m,a):a.resolve()),d.then(function(a){i(a)})},o}return e}]}),angular.module("ioki.treeview").factory("TreeviewManager",["$document","$rootScope",function(a,b){"use strict";var c,d;return d={trees:{},focusedTree:null,newTreeId:0,getNextTreeId:function(){return d.newTreeId+1},isAddedToManager:function(a){return"undefined"!=typeof d.trees[a.treeid]},addTree:function(a,b){0===Object.keys(d.trees).length&&(d.focusedTree=a.treeid),"undefined"==typeof d.trees[a.treeid]&&(d.trees[a.treeid]={},d.trees[a.treeid].scope=a,d.trees[a.treeid].element=b,"undefined"==typeof d.trees[a.treeid].scope.treeAllowCopy&&(d.trees[a.treeid].scope.treeAllowCopy=!1),d.trees[a.treeid].scope.$on("$destroy",function(){delete d.trees[a.treeid]}))},uniqueIdUsed:[],makeNewNodeId:function(){var a,b;do b=Math.random().toString(36).substring(7),a=d.uniqueIdUsed.indexOf(b);while(-1!==a);return d.uniqueIdUsed.push(b),b},selectedNode:{},selectNode:function(a,b,c){var e,f,g;g=function(){for("undefined"!=typeof d.trees[b].selectedNode&&(d.trees[b].selectedNode.selected=!1),a.selected=!0,f=a.getParent();null!==f;)f.expanded=!0,f=f.getParent();d.setSelectedNode(a,b)},angular.isFunction(a.getScope)&&c?(e=a.getScope(),e.$apply(function(){g()})):g()},setSelectedNode:function(a,c){d.focusedTree=c,d.trees[c].selectedNode=a,b.$broadcast("treeview-selected",a,c)},unselectNode:function(){d.selectedNode={},b.$broadcast("treeview-unselected",{})},isKeyboardNavigationPossible:function(){return!d.trees[d.focusedTree].scope.treesettings.disallowKeyboardNavigation},moveControl:{left:function(){var a,b;b=function(){d.trees[d.focusedTree].selectedNode.expanded=!1},angular.isFunction(d.trees[d.focusedTree].selectedNode.getScope)?(a=d.trees[d.focusedTree].selectedNode.getScope(),a.$apply(function(){b()})):b()},right:function(){var a,b;b=function(){d.trees[d.focusedTree].selectedNode.expanded=!0},angular.isFunction(d.trees[d.focusedTree].selectedNode.getScope)?(a=d.trees[d.focusedTree].selectedNode.getScope(),a.$apply(function(){b()})):b()},top:function(){var a,b,c,e,f=d.trees[d.focusedTree].selectedNode,g=f.getParent();if(null!==g){if(a=g.subnodes.indexOf(f),a>0)for(b=g.subnodes[a-1],c=b;b.expanded&&"undefined"!=typeof b.subnodes&&b.subnodes.length>0;)e=b.subnodes[b.subnodes.length-1],c=e,b=e;else c=g;d.selectNode(c,c.getScope().treeid,!0)}},bottom:function(){var a,b,c,e,f=d.trees[d.focusedTree].selectedNode,g=f.getParent();if(f.expanded&&angular.isArray(f.subnodes)&&"undefined"!=typeof f.subnodes[0])b=f.subnodes[0],c=b,d.selectNode(c,c.getScope().treeid,!0);else if(null!==g){if(a=g.subnodes.indexOf(f),"undefined"!=typeof g.subnodes[a+1])b=g.subnodes[a+1],c=b;else do e=g.getParent(),null!==e&&(a=e.subnodes.indexOf(g),g=e,"undefined"!=typeof e.subnodes[a+1]&&(b=e.subnodes[a+1],c=b));while(null!==e&&"undefined"==typeof e.subnodes[a+1]);"undefined"!=typeof c&&d.selectNode(c,c.getScope().treeid,!0)}},"delete":function(){d.trees[d.focusedTree].selectedNode.$removeNode()}}},c={37:d.moveControl.left,38:d.moveControl.top,39:d.moveControl.right,40:d.moveControl.bottom,46:d.moveControl["delete"]},a.on("keydown",function(a){var b=a.keyCode;d.isKeyboardNavigationPossible()&&angular.isFunction(c[b])&&c[b]()}),d}]),angular.module("ioki.treeview").run(["$templateCache",function(a){"use strict";a.put("templates/ioki-treeview",'<treeview-node ng-controller="OptionalNodeCtrl as optionalNodeCtrl">\n    <treeview-node-body\n        ng-class="{\n            \'expanded\': treedata.expanded,\n            \'selected\': treedata.selected,\n            \'dir\': treedata.subnodes\n        }"\n        ng-click="$selectNode($event)">\n\n        <!-- expander icon -->\n        <i class="fa expander"\n           ng-click="$toggleNode()"></i>\n\n        <!-- node icon -->\n        <i class="fa node-icon"></i>\n\n        <!-- node label -->\n        <span class="node-label" ng-bind="treedata.name" ng-click="optionalNodeCtrl.someMethod()"></span>\n\n        <!-- remove node icon -->\n        <i class="fa remove-node"\n           ng-click="$removeNode()"></i>\n\n        <!-- add node icon -->\n        <i class="fa add-node"\n           ng-click="$addNode()"></i>\n    </treeview-node-body>\n    <ul>\n        <li ng-repeat="subnode in treedata.subnodes track by subnode.id" ng-if="treedata.subnodes && treedata.expanded">\n            <treeview treedata="subnode"></treeview>\n        </li>\n    </ul>\n</treeview-node>\n')}]),angular.module("ioki.treeview").filter("getNodeIcon",function(){"use strict";return function(a,b){var c;return"string"==typeof a.type&&"undefined"!=typeof b[a.type]?(c=b[a.type],null!==c&&"object"==typeof c?(a.expanded=a.expanded||!1,a.expanded?c.open:c.closed):c):null}});