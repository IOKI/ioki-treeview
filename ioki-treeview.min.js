angular.module("RecursionHelper",[]).factory("RecursionHelper",["$compile",function(a){"use strict";return{compile:function(b,c){angular.isFunction(c)&&(c={post:c});var d,e=b.contents().remove();return{pre:c&&c.pre?c.pre:null,post:function(b,f){d||(d=a(e)),d(b,function(a){f.append(a)}),c&&c.post&&c.post.apply(null,arguments)}}}}}]),angular.module("ioki.treeview",["RecursionHelper"]).provider("$treeview",function(){"use strict";var a=this.defaults={prefixClass:"treeview-",prefixEvent:"treeview",treesettings:{template:"templates/ioki-treeview",iconsBaseClass:"fa",interfaceIcons:{addNode:"fa-plus-circle",removeNode:"fa-minus-circle",openDir:"fa-caret-down",closeDir:"fa-caret-right"},expandable:!0,expandAll:!0,showExpander:!0,removable:!1,addable:!0,selectable:!1,customMethods:{addNode:null,removeNode:null,dragStart:null,dragEnd:null,dragging:null,drop:null}}};this.$get=function(){function b(b){function c(a,b){var c,f,h;"string"==typeof a&&"undefined"!=typeof b&&(c=e(g),f=c.treedata,h=f.subnodes,f[a]=b,d(h,a,b))}function d(a,b,c){var e,f;if(angular.isArray(a))for(e=0,f=a.length,e;f>e;e++)a[e][b]=c,d(a[e].subnodes,b,c)}function e(a){return"undefined"==typeof a.$parent.$parent.treedata?a:e(a.$parent.$parent)}var f,g,h,i={};f=i.$options=angular.extend({},a,b);for(h in a.treesettings)a.treesettings.hasOwnProperty(h)&&"undefined"==typeof b.treesettings[h]&&(f.treesettings[h]=a.treesettings[h]);if("undefined"!=typeof b.treesettings.interfaceIcons)for(h in a.treesettings.interfaceIcons)a.treesettings.interfaceIcons.hasOwnProperty(h)&&"undefined"==typeof b.treesettings.interfaceIcons[h]&&(f.treesettings.interfaceIcons[h]=a.treesettings.interfaceIcons[h]);return g=i.$scope=f.scope,g.treesettings=f.treesettings,g.treedata.$removable="undefined"!=typeof g.$parent.$parent.treedata&&f.treesettings.removable?!0:!1,f.treesettings.expandAll&&(g.treedata.expanded=!0),g.$addNode=function(a){i.addNode(a)},g.$removeNode=function(){i.removeNode()},g.$toggleNode=function(){i.toggleNode()},g.$selectNode=function(){i.selectNode()},i.toggleNode=function(){f.treesettings.expandable&&(g.treedata.expanded=!g.treedata.expanded)},i.selectNode=function(){var a;f.treesettings.selectable&&(a=g.treedata.selected,c("selected",!1),g.treedata.selected=!a)},i.addNode=function(a){f.treesettings.addable&&"function"==typeof f.treesettings.customMethods.addNode&&f.treesettings.customMethods.addNode(g,a)},i.removeNode=function(){var a,b,c,d=g.treedata;f.treesettings.removable&&("function"==typeof f.treesettings.customMethods.removeNode?f.treesettings.customMethods.removeNode(g):(a=g.$parent.$parent.treedata,"undefined"!=typeof a&&(b=a.subnodes,angular.isArray(b)&&(c=b.indexOf(d),c>-1&&b.splice(c,1)))))},i}return b}}).directive("treeview",["RecursionHelper","$treeview","$templateCache","$compile","$document","$window","$q",function(a,b,c,d,e,f,g){"use strict";var h;return{restrict:"E",transclude:!0,scope:{treedata:"=",treesettings:"="},compile:function(i){return"undefined"==typeof h&&(i.attr("treeview-element-type","root"),h={}),a.compile(i,function(a,i){function j(b){var c=b.pageX+10,d=b.pageY+10,e=angular.element('<li class="separator">DROP ITEM HERE</li>');for(i.css({top:d+"px",left:c+"px"}),"undefined"!=typeof t&&t.remove(),x.el=angular.element(f.document.elementFromPoint(b.clientX,b.clientY)),x.treeview=x.el;"undefined"!=typeof x.treeview[0].tagName&&"treeview"!==x.treeview[0].tagName.toLowerCase();)x.treeview=x.treeview.parent();if(x.list=x.treeview.children().eq(1),l(x.treeview))x.isDroppable=!1;else{if(x.isDroppable=!0,x.scope=x.treeview.scope(),x.node=x.scope.treeData||x.scope.subnode,x.node.subnodes&&x.el.hasClass("node-label"))x.dropToDir=!0,x.list_el=x.treeview,x.list=x.treeview.children().children().eq(-1),"undefined"!=typeof u&&u.removeClass("dropToDir"),u=x.treeview,u.addClass("dropToDir");else{for(x.dropToDir=!1,x.treeview=x.treeview.parent(),x.list_el=x.treeview;"undefined"!=typeof x.treeview[0].tagName&&"treeview"!==x.treeview[0].tagName.toLowerCase();)x.treeview=x.treeview.parent();x.list=x.list_el.after()}b.clientY>x.list[0].offsetTop+x.list[0].offsetHeight/2?(x.list.after(e),x.addAfterEl=!0):(x.list.prepend(e),x.addAfterEl=!1),t=e}x.dropToDir===!1&&"undefined"!=typeof u&&u.removeClass("dropToDir"),"function"==typeof a.treesettings.customMethods.dragging&&a.treesettings.customMethods.dragging(h,a,x,i)}function k(){var b,c,d,f,l,m=g.defer(),n=m.promise;x.isDroppable?(x.scope=x.treeview.scope(),x.node=x.scope.treeData||x.scope.subnode,b=a.treedata,l=a.$parent.$parent.treedata,d=l.subnodes.indexOf(b),x.dropToDir?(c=x.node.subnodes.length,x.node.expanded||(x.node.expanded=!0)):(f=x.list_el.children().eq(0).scope().subnode,c=x.addAfterEl?x.node.subnodes.indexOf(f)+1:x.node.subnodes.indexOf(f)),n.then(function(a){var c=a||0;l.subnodes.splice(d,1),x.node.subnodes.splice(c,0,b)}),"function"==typeof a.treesettings.customMethods.dragEnd?a.treesettings.customMethods.dragEnd(x.isDroppable,h,a,x,m):m.resolve(c)):"function"==typeof a.treesettings.customMethods.dragEnd&&a.treesettings.customMethods.dragEnd(x.isDroppable,h,a,x,m),v=w=0,s[0].removeChild(r),"undefined"!=typeof t&&t.remove(),"undefined"!=typeof u&&u.removeClass("dropToDir"),x.isDroppable=!1,h.el.removeClass("dragging"),i.removeClass("dragged").removeAttr("style"),e.off("mousemove",j).off("mouseup",k)}function l(a){var b=a;if(b.hasClass("ghost")||"root"===b.attr("treeview-element-type"))return!0;for(;"undefined"!=typeof b[0]&&"root"!==b.attr("treeview-element-type");){if("undefined"==typeof b[0].tagName)return!0;if("treeview"===b[0].tagName.toLowerCase()&&b.hasClass("ghost"))return!0;b=b.parent()}return!1}function m(a){if("undefined"!=typeof a)for(;"undefined"!=typeof a&&"root"!==a.attr("treeview-element-type");)if(a=a.parent(),"root"===a.attr("treeview-element-type"))return{el:a,scope:a.scope()}}var n,o,p,q,r,s,t,u,v=0,w=0,x={el:null,node:null,list:null,list_el:null,treeview:null,scope:null,addAfterEl:!0,dropToDir:!1,isDroppable:!1};n=a.treesettings.template||"templates/ioki-treeview",o=c.get(n),p=d(o)(a),i.append(p),q={scope:a,element:i,treesettings:{}},angular.isDefined(a.treesettings)&&angular.copy(a.treesettings,q.treesettings),b(q),"root"!==i.attr("treeview-element-type")&&i.on("mousedown touchstart",function(b){var c;"i"!==b.target.tagName.toLowerCase()&&"a"!==b.target.tagName.toLowerCase()&&2!==b.button&&3!==b.which&&(b.preventDefault(),b.stopPropagation(),"undefined"==typeof h.el&&(h=m(i)),s=i.parent(),r=i[0].cloneNode(!0),r.className="ghost",i.after(r),v=b.pageX-i[0].offsetLeft,w=b.pageY-i[0].offsetTop,c=i[0].offsetWidth,h.el.addClass("dragging"),i.addClass("dragged").css({left:i[0].offsetLeft+"px",top:i[0].offsetTop+"px",width:c+"px"}),e.on("mousemove touchmove",j).on("mouseup touchend",k),"function"==typeof a.treesettings.customMethods.dragStart&&a.treesettings.customMethods.dragStart(h,a,i))})})}}}]),angular.module("ioki.treeview").run(["$templateCache",function(a){"use strict";a.put("templates/ioki-treeview",'<div ng-class="{\'expanded\': treedata.expanded, \'selected\': treedata.selected}"\n     ng-click="$selectNode()">\n    <!-- expander icon -->\n    <i class="expander {{treesettings.iconsBaseClass}}"\n       ng-class="(treedata.subnodes && treesettings.showExpander) ? (treedata.expanded ? treesettings.interfaceIcons.openDir : treesettings.interfaceIcons.closeDir) : \'invisible\'"\n       ng-click="$toggleNode()"></i>\n\n    <!-- node icon -->\n    <i class="{{treesettings.iconsBaseClass}} {{treedata | getNodeIcon: treesettings.icons}}"></i>\n\n    <!-- node label -->\n    <span class="node-label">{{ treedata.name }}</span>\n\n    <!-- remove node icon -->\n    <i class="remove-node {{treesettings.iconsBaseClass}} {{treesettings.interfaceIcons.removeNode}}"\n       ng-click="$removeNode()"\n       ng-class="{\'invisible\': !treedata.$removable}"></i>\n\n    <!-- add node icon -->\n    <i class="add-node {{treesettings.iconsBaseClass}} {{treesettings.interfaceIcons.addNode}}"\n       ng-click="$addNode()"\n       ng-class="{\'invisible\': (!treesettings.addable || !treedata.subnodes)}"></i>\n</div>\n<ul ng-class="{\'expanded\': treedata.expanded}">\n    <li ng-repeat="subnode in treedata.subnodes track by $index">\n        <treeview treedata="subnode" treesettings="treesettings"></treeview>\n    </li>\n</ul>')}]),angular.module("ioki.treeview").filter("getNodeIcon",function(){"use strict";return function(a,b){var c;return"string"==typeof a.type&&"undefined"!=typeof b[a.type]?(c=b[a.type],null!==c&&"object"==typeof c?(a.expanded=a.expanded||!1,a.expanded?c.open:c.closed):c):null}});